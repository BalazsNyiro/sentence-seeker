[
  "parser.parse_args()",
  "Prg = config.PrgConfigCreate(Args)",
  { "case Args.test": {
       "true":  [
         "tests_execution()",
         "seeker.be_ready_to_seeking(Prg)",
         "example_ui_usage()"
       ],
       "false": [
         "document.docs_copy_samples_into_dir_if_necessary(Prg)",
         { "case Args.ui": {
             "console": [
               {"seeker.be_ready_to_seeking(Prg)": [

                 {"Prg['DocumentObjectsLoaded'] = document.document_objects_collect_from_working_dir()": [
                    "DocumentObjects = dict()",
                    "Files = util.files_abspath_collect_from_dir(Prg['DirDocuments'])",
                    "_Status, DocsSampleInfo = util_json_obj.obj_from_file(os.path.join(Prg['DirTextSamples'], 'document_samples.json'))",
                   {"for Files -> File": [
                     "progressbar_refresh_if_displayed()",
                     "FileText =",
                     "BaseNameNoExt =",
                     "ExtensionLow = ",
                     "convert_to_txt_if_necessary()"
                   ]}
                 ]},
                 "Prg[...] = text.words_count_in_all_document(Prg)",
                 "if necessary: print MessagesForUser",
                 "if gui ui ProgressBarRoot: finish progress bar"
               ]},
               {"ui_console.user_interface_start(Prg, Args)": [

               ]}
             ],
             "tkinter": [],
             "json": [],
             "html": []
           }
         }
       ]
    }
  }
]